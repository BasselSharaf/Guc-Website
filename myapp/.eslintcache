[{"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\index.js":"1","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\App.js":"2","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\LogIn.js":"3","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseInstructor.js":"4","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AcademicMem.js":"5","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\HeadOfDepartment.js":"6","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Coordinator.js":"7","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseCoverage.js":"8","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffCourse.js":"9","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\Profile.js":"10","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\Schedule.js":"11","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SlotAssignment.js":"12","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\DeletFromSlot.js":"13","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\RemoveFromCourse.js":"14","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffDept.js":"15","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\AssignToSlot.js":"16","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\Notification.js":"17","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateSlot.js":"18","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateProfile.js":"19","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseCoordinator.js":"20","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ResetPassword.js":"21","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AcademicMem1.js":"22","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewAttendance.js":"23","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SignOut.js":"24","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SignIn.js":"25","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewMissingDays.js":"26","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewHours.js":"27","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Profile.js":"28","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Schedule.js":"29","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\ChangeDayOff.js":"30","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\VorCreqs.js":"31","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SendRepReq.js":"32","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Respond.js":"33","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AccLeave.js":"34","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AnnualLeave.js":"35","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SickLeave.js":"36","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\MatLeave.js":"37","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\CompLeave.js":"38","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Notification.js":"39","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SLLR.js":"40","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewLeaveRequests.js":"41","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewDayOffReq.js":"42","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CoursCoverag1.js":"43","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewDayOff.js":"44","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffInDept1.js":"45","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffInCourse.js":"46","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SlotAssignment1.js":"47","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\AssignCi.js":"48","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\DeletCi.js":"49","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateCi.js":"50","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Notification.js":"51","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\ADDCS.js":"52","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Profile.js":"53","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\UPDCS.js":"54","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Respond.js":"55","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\DELCS.js":"56","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\HR.js":"57","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddCourse.js":"58","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateFaculty.js":"59","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddFaculty.js":"60","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateCourse.js":"61","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteFaculty.js":"62","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateDepartment.js":"63","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteDepartment.js":"64","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddDepartment.js":"65","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteCourse.js":"66","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddLocation.js":"67","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateLocation.js":"68","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddUser.js":"69","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteLocation.js":"70","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateUser.js":"71","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteUser.js":"72","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateSalary.js":"73","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddSignIn.js":"74","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddSignOut.js":"75","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AssignHOD.js":"76","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\ViewStaffWithMissingHours.js":"77","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\ViewStaffAttendance.js":"78","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\viewStaffWithMissingDays.js":"79"},{"size":300,"mtime":1610730286372,"results":"80","hashOfConfig":"81"},{"size":3520,"mtime":1610731376324,"results":"82","hashOfConfig":"81"},{"size":3714,"mtime":1610730286374,"results":"83","hashOfConfig":"81"},{"size":16606,"mtime":1610730286312,"results":"84","hashOfConfig":"81"},{"size":14880,"mtime":1610730286263,"results":"85","hashOfConfig":"81"},{"size":14933,"mtime":1610730286318,"results":"86","hashOfConfig":"81"},{"size":13298,"mtime":1610730286300,"results":"87","hashOfConfig":"81"},{"size":3296,"mtime":1610730286304,"results":"88","hashOfConfig":"81"},{"size":3195,"mtime":1610730286337,"results":"89","hashOfConfig":"81"},{"size":2585,"mtime":1610731953104,"results":"90","hashOfConfig":"81"},{"size":1535,"mtime":1610730286330,"results":"91","hashOfConfig":"81"},{"size":3255,"mtime":1610730286335,"results":"92","hashOfConfig":"81"},{"size":4879,"mtime":1610730286316,"results":"93","hashOfConfig":"81"},{"size":3020,"mtime":1610730286322,"results":"94","hashOfConfig":"81"},{"size":2077,"mtime":1610730286338,"results":"95","hashOfConfig":"81"},{"size":4852,"mtime":1610730286301,"results":"96","hashOfConfig":"81"},{"size":1435,"mtime":1610730286367,"results":"97","hashOfConfig":"81"},{"size":5484,"mtime":1610730286357,"results":"98","hashOfConfig":"81"},{"size":2890,"mtime":1610730286357,"results":"99","hashOfConfig":"81"},{"size":2974,"mtime":1610730286303,"results":"100","hashOfConfig":"81"},{"size":3466,"mtime":1610730286328,"results":"101","hashOfConfig":"81"},{"size":10701,"mtime":1610730286264,"results":"102","hashOfConfig":"81"},{"size":9719,"mtime":1610730286358,"results":"103","hashOfConfig":"81"},{"size":1790,"mtime":1610730286332,"results":"104","hashOfConfig":"81"},{"size":1784,"mtime":1610730286331,"results":"105","hashOfConfig":"81"},{"size":1854,"mtime":1610730286373,"results":"106","hashOfConfig":"81"},{"size":1866,"mtime":1610730286375,"results":"107","hashOfConfig":"81"},{"size":2585,"mtime":1610732391699,"results":"108","hashOfConfig":"81"},{"size":1535,"mtime":1610730286282,"results":"109","hashOfConfig":"81"},{"size":3601,"mtime":1610730286264,"results":"110","hashOfConfig":"81"},{"size":6504,"mtime":1610730286285,"results":"111","hashOfConfig":"81"},{"size":4769,"mtime":1610730286281,"results":"112","hashOfConfig":"81"},{"size":8546,"mtime":1610730286280,"results":"113","hashOfConfig":"81"},{"size":3677,"mtime":1610730286262,"results":"114","hashOfConfig":"81"},{"size":4199,"mtime":1610730286263,"results":"115","hashOfConfig":"81"},{"size":3688,"mtime":1610730286282,"results":"116","hashOfConfig":"81"},{"size":3692,"mtime":1610730286276,"results":"117","hashOfConfig":"81"},{"size":3671,"mtime":1610730286264,"results":"118","hashOfConfig":"81"},{"size":1435,"mtime":1610730286277,"results":"119","hashOfConfig":"81"},{"size":4771,"mtime":1610730286283,"results":"120","hashOfConfig":"81"},{"size":7811,"mtime":1610730286373,"results":"121","hashOfConfig":"81"},{"size":7355,"mtime":1610730286373,"results":"122","hashOfConfig":"81"},{"size":3048,"mtime":1610730286302,"results":"123","hashOfConfig":"81"},{"size":5181,"mtime":1610730286375,"results":"124","hashOfConfig":"81"},{"size":2078,"mtime":1610730286343,"results":"125","hashOfConfig":"81"},{"size":3201,"mtime":1610730286342,"results":"126","hashOfConfig":"81"},{"size":4135,"mtime":1610730286336,"results":"127","hashOfConfig":"81"},{"size":2867,"mtime":1610730286301,"results":"128","hashOfConfig":"81"},{"size":2912,"mtime":1610730286314,"results":"129","hashOfConfig":"81"},{"size":3298,"mtime":1610730286350,"results":"130","hashOfConfig":"81"},{"size":1435,"mtime":1610730286296,"results":"131","hashOfConfig":"81"},{"size":4277,"mtime":1610730286292,"results":"132","hashOfConfig":"81"},{"size":2585,"mtime":1610732334210,"results":"133","hashOfConfig":"81"},{"size":6090,"mtime":1610730286300,"results":"134","hashOfConfig":"81"},{"size":8789,"mtime":1610730286297,"results":"135","hashOfConfig":"81"},{"size":4286,"mtime":1610730286295,"results":"136","hashOfConfig":"81"},{"size":16391,"mtime":1610731407142,"results":"137","hashOfConfig":"81"},{"size":5442,"mtime":1610629178700,"results":"138","hashOfConfig":"81"},{"size":3112,"mtime":1610637544682,"results":"139","hashOfConfig":"81"},{"size":2690,"mtime":1610636956401,"results":"140","hashOfConfig":"81"},{"size":4939,"mtime":1610632429495,"results":"141","hashOfConfig":"81"},{"size":2743,"mtime":1610637846164,"results":"142","hashOfConfig":"81"},{"size":3914,"mtime":1610640808736,"results":"143","hashOfConfig":"81"},{"size":3384,"mtime":1610642374065,"results":"144","hashOfConfig":"81"},{"size":3766,"mtime":1610640454968,"results":"145","hashOfConfig":"81"},{"size":2680,"mtime":1610633425656,"results":"146","hashOfConfig":"81"},{"size":4076,"mtime":1610642875905,"results":"147","hashOfConfig":"81"},{"size":4106,"mtime":1610642950649,"results":"148","hashOfConfig":"81"},{"size":7643,"mtime":1610647403225,"results":"149","hashOfConfig":"81"},{"size":2631,"mtime":1610643315033,"results":"150","hashOfConfig":"81"},{"size":7306,"mtime":1610650863699,"results":"151","hashOfConfig":"81"},{"size":2812,"mtime":1610647386894,"results":"152","hashOfConfig":"81"},{"size":3312,"mtime":1610648257783,"results":"153","hashOfConfig":"81"},{"size":6113,"mtime":1610652807770,"results":"154","hashOfConfig":"81"},{"size":6124,"mtime":1610653001916,"results":"155","hashOfConfig":"81"},{"size":3445,"mtime":1610657990233,"results":"156","hashOfConfig":"81"},{"size":2287,"mtime":1610656649274,"results":"157","hashOfConfig":"81"},{"size":5360,"mtime":1610655174147,"results":"158","hashOfConfig":"81"},{"size":2196,"mtime":1610656894846,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1xmmyx3",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"162"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"162"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"162"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"162"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"162"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"162"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"162"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"162"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"162"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"162"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"162"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"162"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"162"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"162"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"162"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"162"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"162"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"162"},"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\index.js",[],["342","343"],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\App.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\LogIn.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseInstructor.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AcademicMem.js",["344"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport Profile from './Profile'\r\nimport Schedule from './Schedule'\r\nimport VorCreq from './VorCreqs'\r\nimport ChangeDayOff from './ChangeDayOff'\r\nimport SendRepReq from './SendRepReq'\r\nimport Respond from './Respond'\r\nimport AnnualLeave from './AnnualLeave'\r\nimport MatLeave from './MatLeave'\r\nimport SickLeave from './SickLeave'\r\nimport AccLeave from './AccLeave'\r\nimport CompLeave from './CompLeave'\r\nimport SLLR from './SLLR'\r\nimport Notification from './Notification'\r\n/////////////////////////////////////////\r\nimport UpdateProfile from \"../ci&hod/UpdateProfile\";\r\nimport ResetPassword from \"../ci&hod/ResetPassword\";\r\nimport ViewAttendance from \"../ci&hod/ViewAttendance\";\r\nimport SignIn from \"../ci&hod/SignIn\";\r\nimport SignOut from \"../ci&hod/SignOut\";\r\nimport ViewMissingDays from \"../ci&hod/ViewMissingDays\";\r\nimport ViewHours from \"../ci&hod/ViewHours\";\r\nimport {Navbar,Button,Nav,ButtonGroup,Dropdown,DropdownButton,Container,Row,Col} from 'react-bootstrap';\r\n\r\nexport default class AcademicMem extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state=\r\n        ({\r\n            current:\"main\",\r\n            navigation:\"Main TA\"\r\n        })\r\n        this.HandleHome = this.HandleHome.bind(this)\r\n        this.HandleVORC = this.HandleVORC.bind(this)\r\n        this.HandleCDO = this.HandleCDO.bind(this)\r\n        this.HandleSRR = this.HandleSRR.bind(this)\r\n        this.HandleRES = this.HandleRES.bind(this)\r\n        this.HandleALR = this.HandleALR.bind(this)\r\n        this.HandleMLR = this.HandleMLR.bind(this)\r\n        this.HandleSLR = this.HandleSLR.bind(this)\r\n        this.HandleAcLR = this.HandleAcLR.bind(this)\r\n        this.HandleCLR = this.HandleCLR.bind(this)\r\n        this.HandleSLLR = this.HandleSLLR.bind(this)\r\n        this.HandleNOT = this.HandleNOT.bind(this)\r\n        /////////////////////////////////////\r\n        this.HandleUpdateProfile = this.HandleUpdateProfile.bind(this)\r\n        this.HandleResetPassword = this.HandleResetPassword.bind(this)\r\n        this.HandleViewAttendance = this.HandleViewAttendance.bind(this)\r\n        this.HandleSignIn = this.HandleSignIn.bind(this)\r\n        this.HandleSignOut = this.HandleSignOut.bind(this)\r\n        this.HandleViewMissingDays = this.HandleViewMissingDays.bind(this)\r\n        this.HandleViewHours = this.HandleViewHours.bind(this)\r\n    }\r\n\r\n    store()\r\n    {\r\n        localStorage.setItem('am',JSON.stringify(this.state));\r\n    }\r\n    componentDidMount()\r\n  {\r\n    try {\r\n        this.documentData = JSON.parse(localStorage.getItem('am'));\r\n        //localStorage.clear()\r\n        if (localStorage.getItem('document')) {\r\n            this.setState({\r\n              current: this.documentData.current,\r\n              navigation: this.documentData.navigation,\r\n              \r\n        })\r\n         }\r\n         else {\r\n          this.setState({\r\n            current:\"main\",\r\n            navigation:\"Main TA\"\r\n          })\r\n      }\r\n      } catch (error) {\r\n        this.setState({\r\n            current:\"main\",\r\n         navigation:\"Main TA\"\r\n            \r\n      })\r\n      }\r\n  }\r\n  HandleHome(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"main\",\r\n                navigation:\"Main TA\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleNOT(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"NOT\",\r\n                navigation:\"Main TA/notification\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleVORC(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"VORC\",\r\n                navigation:\"Main TA/View or Cancel Requests\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleCDO(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"CDO\",\r\n                navigation:\"Main TA/Change Day Off Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleSRR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SRR\",\r\n                navigation:\"Main TA/Send Replacment Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleRES(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"RES\",\r\n                navigation:\"Main TA/respond to replacement request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleALR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"ALR\",\r\n                navigation:\"Main TA/Annual Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleMLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"MLR\",\r\n                navigation:\"Main TA/Matrernity Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleSLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SLR\",\r\n                navigation:\"Main TA/Sick Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleAcLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"AcLR\",\r\n                navigation:\"Main TA/Acceidential Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleCLR(event)\r\n    {\r\n       // console.log(\"lol\")\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"CLR\",\r\n                navigation:\"Main TA/compensation Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleSLLR(event)\r\n    {\r\n       // console.log(\"lol\")\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SLLR\",\r\n                navigation:\"Main TA/slot linking request Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleLogOut(token){\r\n                   \r\n        axios.post('http://localhost:4000/authentication/logout',{headers:{\r\n            'token':token\r\n        }})\r\n\r\n        .then(res=>\r\n            {\r\n                \r\n                \r\n                localStorage.clear();\r\n                window.location.reload();\r\n               // this.HandleLogOut()\r\n            })\r\n            .catch(err=>\r\n                {\r\n                    console.log(err)\r\n                })\r\n    }\r\n    HandleUpdateProfile(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"update Profile\",\r\n            navigation:\"Main TA/Update Profile\"\r\n        },()=>this.store())\r\n    }\r\n    HandleResetPassword(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Reset Password\",\r\n            navigation:\"Main TA/Reset Password\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewAttendance(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Attendance\",\r\n            navigation:\"Main TA/View Attendance\"\r\n        },()=>this.store())\r\n    }\r\n    HandleSignIn(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Sign In\",\r\n            navigation:\"Main TA/Sign In\"\r\n        },()=>this.store())\r\n    }\r\n    HandleSignOut(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Sign Out\",\r\n            navigation:\"Main TA/Sign Out\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewMissingDays(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Missing Days\",\r\n            navigation:\"Main TA/View Missing Days\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewHours(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Hours\",\r\n            navigation:\"Main TA/View Missing and Extra Hours\"\r\n        },()=>this.store())\r\n    }\r\n    \r\n    render()\r\n    {\r\n        let x,y;\r\n        switch (this,this.state.current) {\r\n            case \"main\":{x=(<Schedule token={this.props.token} userid={this.props.userId}/>);y=(<Profile token={this.props.token} userid={this.props.userId}/>);break;}\r\n            \r\n            case \"VORC\":{x=(<VorCreq token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n            \r\n            case \"CDO\":{x=(<ChangeDayOff token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n\r\n            case \"SRR\":{\r\n               x=(<SendRepReq token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n            \r\n            case \"RES\":{\r\n                    x=(<Respond token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n                \r\n            case \"ALR\":{\r\n                    x=(<AnnualLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"MLR\":{\r\n                     x=(<MatLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"SLR\":{\r\n                     x=(<SickLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;} \r\n            case \"AcLR\":{\r\n                     x=(<AccLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"CLR\":{\r\n                     x=(<CompLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;} \r\n            case \"SLLR\":{\r\n                     x=(<SLLR token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"NOT\":{\r\n                     x=(<Notification token={this.props.token} userid={this.props.userId}/>);y=(null);break;}  \r\n            case \"update Profile\":\r\n                    x=(<UpdateProfile token={this.props.token}/>)\r\n                    break;\r\n                case \"Reset Password\":\r\n                    x=(<ResetPassword token={this.props.token}/>)\r\n                    break;\r\n                case \"View Attendance\":\r\n                    x=(<ViewAttendance token={this.props.token}/>)\r\n                    break;\r\n                case \"Sign In\":\r\n                    x=(<SignIn token={this.props.token}/>)\r\n                    break;\r\n                case \"Sign Out\":\r\n                    x=(<SignOut token={this.props.token}/>)\r\n                    break;\r\n                case \"View Missing Days\":\r\n                    x=(<ViewMissingDays token={this.props.token}/>)\r\n                    break;\r\n                case \"View Hours\":\r\n                    x=(<ViewHours token={this.props.token}/>)\r\n                    break;\r\n                                     \r\n            default:\r\n                break;\r\n        }\r\n        return(\r\n            <div >\r\n        \r\n        \r\n        <div >\r\n                <Navbar bg=\"dark\" variant=\"dark\" >\r\n                    <Navbar.Brand >{this.state.navigation}</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#features\" onClick={this.HandleNOT}>Notifications</Nav.Link>\r\n                    </Nav>\r\n                    <Button variant=\"outline-info\" onClick={()=>{console.log()\r\n                    this.HandleLogOut(this.props.token)\r\n         }}>Log Out</Button>\r\n                    <Button variant=\"outline-info\" onClick={this.HandleHome}>home</Button>\r\n                </Navbar>\r\n        </div>\r\n        <Container>\r\n                    <Row>\r\n                        <Col>                       \r\n                        <ButtonGroup vertical>\r\n                        <Button onClick={this.HandleVORC} >View or cancel sent requests</Button>\r\n                        <Button onClick={this.HandleSLLR}>send slot linking request</Button>\r\n                        <Button onClick={this.HandleCDO}>change dayoff request</Button>\r\n\r\n\r\n\r\n                        <DropdownButton as={ButtonGroup} title=\"Replacment requests\" id=\"bg-vertical-dropdown-1\">\r\n                            <Dropdown.Item eventKey=\"1\" onClick={this.HandleSRR} >send</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" onClick={this.HandleRES} >responde</Dropdown.Item>\r\n                            \r\n                        </DropdownButton>\r\n\r\n                        <DropdownButton as={ButtonGroup} title=\"Leave requests\" id=\"bg-vertical-dropdown-1\">       \r\n                            <Dropdown.Item eventKey = \"1\" onClick={this.HandleAcLR}>AccidentalLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"2\" onClick={this.HandleCLR}>CompensationLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"3\" onClick={this.HandleSLR}>SickLeavesRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"4\" onClick={this.HandleMLR}>MaternityLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"5\" onClick={this.HandleALR}>annualleaverequest</Dropdown.Item>\r\n                        </DropdownButton>\r\n                        <DropdownButton as={ButtonGroup} title=\"Staff Members Functions\" id=\"bg-vertical-dropdown-1\">\r\n                            <Dropdown.Item eventKey = \"1\" onClick={this.HandleUpdateProfile}>Update Profile</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"2\" onClick={this.HandleResetPassword}>Reset Password</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"3\" onClick={this.HandleViewAttendance}>View Attendendance</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"4\" onClick={this.HandleSignIn}>Sign In</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"5\" onClick={this.HandleSignOut}>Sign Out</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"6\" onClick={this.HandleViewMissingDays}>View Missing Days</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"6\" onClick={this.HandleViewHours}>View Missing And Extra Hours</Dropdown.Item>\r\n                        </DropdownButton>\r\n                        </ButtonGroup>        </Col>\r\n                        <Col>\r\n                        {x}\r\n                         </Col>\r\n                    </Row>\r\n                    <Row>\r\n                            <Col>\r\n                                \r\n                            </Col>\r\n                        <Col>\r\n                        {/* <Profile token={this.props.token} userid={this.props.userId}/> */}\r\n                         \r\n                        {y}\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n        </Container>\r\n    </div>\r\n        )\r\n    }\r\n}","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\HeadOfDepartment.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Coordinator.js",["345"],"import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {Navbar,Button,Nav,ButtonGroup,Dropdown,DropdownButton,Container,Row,Col} from 'react-bootstrap';\r\nimport Profile from './Profile'\r\n//import Schedule from './Schedule'\r\nimport Notification from './Notification'\r\nimport AcademicMem from \"../AM/AcademicMem1\" \r\nimport Respond from './Respond'\r\nimport ADDCS from './ADDCS' \r\nimport DELCS from './DELCS' \r\nimport UPDCS from './UPDCS' \r\n//==========================================================\r\nimport UpdateProfile from \"../ci&hod/UpdateProfile\";\r\nimport ResetPassword from \"../ci&hod/ResetPassword\";\r\nimport ViewAttendance from \"../ci&hod/ViewAttendance\";\r\nimport SignIn from \"../ci&hod/SignIn\";\r\nimport SignOut from \"../ci&hod/SignOut\";\r\nimport ViewMissingDays from \"../ci&hod/ViewMissingDays\";\r\nimport ViewHours from \"../ci&hod/ViewHours\";\r\nexport default class Coordinator extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        this.state=\r\n        {\r\n         current:\"main\",\r\n         navigation:\"Main CC\",\r\n         CI:true\r\n        }\r\n        this.HandleUPDCS = this.HandleUPDCS.bind(this)\r\n         this.HandelADDCS = this.HandelADDCS.bind(this)\r\n         this.HandleDELCS = this.HandleDELCS.bind(this)\r\n         this.HandleHome = this.HandleHome.bind(this)\r\n        //==============================================================\r\n        this.HandleUpdateProfile = this.HandleUpdateProfile.bind(this)\r\n        this.HandleResetPassword = this.HandleResetPassword.bind(this)\r\n        this.HandleViewAttendance = this.HandleViewAttendance.bind(this)\r\n        this.HandleSignIn = this.HandleSignIn.bind(this)\r\n        this.HandleSignOut = this.HandleSignOut.bind(this)\r\n        this.HandleViewMissingDays = this.HandleViewMissingDays.bind(this)\r\n        this.HandleViewHours = this.HandleViewHours.bind(this)\r\n        this.HandleNOT = this.HandleNOT.bind(this)\r\n        this.HandleCI = this.HandleCI.bind(this)\r\n        this.BACK = this.BACK.bind(this)\r\n        this.HandleRespond= this.HandleRespond.bind(this);\r\n    }\r\n\r\n    store()\r\n    {\r\n        localStorage.setItem('CC',JSON.stringify(this.state));\r\n    }\r\n    BACK(){\r\n        \r\n        this.setState({\r\n            current:\"main\",\r\n            navigation:\"Main CC\",\r\n            CI:true\r\n        },()=>{this.store();console.log(this.state)})\r\n    }\r\n\r\n    HandelADDCS(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"ADDCS\",\r\n                navigation:\"Main CC/Add course to slot\",\r\n                \r\n            }\r\n        ,()=>this.store())\r\n        \r\n        //localStorage.setItem('ci',JSON.stringify(this.state));\r\n    }\r\n    HandleUPDCS(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"UPDCS\",\r\n                navigation:\"Main CC/Update course slot\",\r\n                \r\n            }\r\n        ,()=>this.store())\r\n        \r\n        //localStorage.setItem('ci',JSON.stringify(this.state));\r\n    }\r\n\r\n    HandleDELCS(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"DELCS\",\r\n                navigation:\"Main CC/Delet course to slot\",\r\n                \r\n            }\r\n        ,()=>this.store())\r\n        \r\n        //localStorage.setItem('ci',JSON.stringify(this.state));\r\n    }\r\n    HandleNOT(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"NOT\",\r\n                navigation:\"Main CC/Notifications\",\r\n                \r\n            }\r\n        ,()=>this.store())\r\n        \r\n        //localStorage.setItem('ci',JSON.stringify(this.state));\r\n    }\r\n   \r\n    HandleRespond(event){\r\n        event.preventDefault() ;\r\n       this.setState(\r\n           {\r\n               current:\"RESP\",\r\n               navigation:\"Main CC/Slot linking request\",\r\n           },()=>this.store()\r\n       )\r\n        \r\n    }\r\n    \r\n    \r\n    HandleHome(event)\r\n    {\r\n        //event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"main\",\r\n                navigation:\"Main CC\",\r\n                \r\n            }\r\n            ,()=>this.store())\r\n        \r\n       // localStorage.setItem('ci',JSON.stringify(this.state));\r\n    }\r\n//==============================================================================    \r\n    HandleUpdateProfile(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"update Profile\",\r\n            navigation:\"Main CC/Update Profile\"\r\n        },()=>this.store())\r\n    }\r\n    HandleResetPassword(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Reset Password\",\r\n            navigation:\"Main CC/Reset Password\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewAttendance(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Attendance\",\r\n            navigation:\"Main CC/View Attendance\"\r\n        },()=>this.store())\r\n    }\r\n    HandleSignIn(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Sign In\",\r\n            navigation:\"Main CC/Sign In\"\r\n        },()=>this.store())\r\n    }\r\n    HandleSignOut(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"Sign Out\",\r\n            navigation:\"Main CC/Sign Out\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewMissingDays(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Missing Days\",\r\n            navigation:\"Main CC/View Missing Days\"\r\n        },()=>this.store())\r\n    }\r\n    HandleViewHours(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"View Hours\",\r\n            navigation:\"Main CC/View Missing and Extra Hours\"\r\n        },()=>this.store())\r\n    }\r\n    HandleCI(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            current:\"CI\",\r\n            navigation:\"Main CC/AM\",\r\n            CI:false\r\n        },()=>this.store())\r\n    }\r\n\r\n    HandleLogOut(token){\r\n                   \r\n        axios.post('http://localhost:4000/authentication/logout',{headers:{\r\n            'token':token\r\n        }})\r\n\r\n        .then(res=>\r\n            { localStorage.clear();\r\n                window.location.reload();\r\n               \r\n            })\r\n            .catch(err=>\r\n                {\r\n                    console.log(err)\r\n                })\r\n    }\r\n    componentDidMount()\r\n  {\r\n      try {\r\n        this.documentData = JSON.parse(localStorage.getItem('CC'));\r\n        this.setState({\r\n            current: this.documentData.current,\r\n            navigation: this.documentData.navigation,\r\n            CI:this.documentData.CI})\r\n      } catch (error) {\r\n        this.setState({\r\n            current:\"main\",\r\n            navigation:\"Main CC\",\r\n            CI:true\r\n          })\r\n      }\r\n      \r\n    \r\n  }\r\n  HandleCI(event){\r\n    event.preventDefault()\r\n    this.setState({\r\n        current:\"CI\",\r\n        navigation:\"Main CI/AM\",\r\n        CI:false\r\n    },()=>this.store())\r\n}\r\n\r\n    render()\r\n    { \r\n       // localStorage.setItem('ci',JSON.stringify(this.state));\r\n       if (this.state.CI) {\r\n        let x;\r\n        if (this.state.current===\"main\") {//main\r\n             x=(<Profile token={this.props.token}/>)}\r\n        if (this.state.current===\"NOT\") {//main\r\n             x=(<Notification token={this.props.token}/>)}\r\n        if (this.state.current===\"ADDCS\") {//main\r\n             x=(<ADDCS token={this.props.token}/>)} \r\n         if (this.state.current===\"UPDCS\") {//main\r\n             x=(<UPDCS token={this.props.token}/>)}          \r\n        if (this.state.current===\"DELCS\") {//main\r\n             x=(<DELCS token={this.props.token}/>)}     \r\n//          ==========================================================  \r\n            if (this.state.current===\"RESP\"){\r\n                x=(<Respond token={this.props.token}/>)\r\n            }\r\n            if (this.state.current===\"update Profile\"){\r\n                x=(<UpdateProfile token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"Reset Password\"){\r\n                x=(<ResetPassword token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"View Attendance\"){\r\n                x=(<ViewAttendance token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"Sign In\"){\r\n                x=(<SignIn token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"Sign Out\"){\r\n                x=(<SignOut token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"View Missing Days\"){\r\n                x=(<ViewMissingDays token={this.props.token}/>)\r\n            }\r\n            if(this.state.current===\"View Hours\"){\r\n                x=(<ViewHours token={this.props.token}/>)\r\n            }\r\n        \r\n\r\n        \r\n            return (\r\n                <div >\r\n                    \r\n                    \r\n                    <div >\r\n                            <Navbar bg=\"dark\" variant=\"dark\" >\r\n                                <Navbar.Brand >{this.state.navigation}</Navbar.Brand>\r\n                                <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"#features\" onClick={this.HandleNOT}>Notifications</Nav.Link>\r\n                                </Nav>\r\n                                <Button variant=\"outline-info\" onClick={()=>{console.log()\r\n                                this.HandleLogOut(this.props.token)\r\n                     }}>Log Out</Button>\r\n                                <Button variant=\"outline-info\" onClick={this.HandleHome}>home</Button>\r\n                            </Navbar>\r\n                    </div>\r\n                    <Container>\r\n                                <Row>\r\n                                    <Col>                       \r\n                                    <ButtonGroup vertical>\r\n                                    \r\n                                    <DropdownButton as={ButtonGroup} title=\"course slot\" id=\"bg-vertical-dropdown-1\">\r\n                                        <Dropdown.Item eventKey=\"1\" onClick={this.HandelADDCS}>Add slot to course</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"2\" onClick={this.HandleUPDCS}>Update course slot</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey=\"2\" onClick={this.HandleDELCS}>Delete slot from course</Dropdown.Item>\r\n                                    </DropdownButton>\r\n            \r\n                                    <Button onClick={this.HandleRespond}>Slot Linking request</Button>\r\n                                    \r\n                                    <DropdownButton as={ButtonGroup} title=\"Staff Members Functions\" id=\"bg-vertical-dropdown-1\">\r\n                                        <Dropdown.Item eventKey = \"1\" onClick={this.HandleUpdateProfile}>Update Profile</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"2\" onClick={this.HandleResetPassword}>Reset Password</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"3\" onClick={this.HandleViewAttendance}>View Attendendance</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"4\" onClick={this.HandleSignIn}>Sign In</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"5\" onClick={this.HandleSignOut}>Sign Out</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"6\" onClick={this.HandleViewMissingDays}>View Missing Days</Dropdown.Item>\r\n                                        <Dropdown.Item eventKey = \"6\" onClick={this.HandleViewHours}>View Missing And Extra Hours</Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                    \r\n                                    <Button style={{background:\"green\"}} onClick={this.HandleCI}>academic member function</Button>\r\n                                    </ButtonGroup>        </Col>\r\n                                    <Col>\r\n                                    {x}\r\n                                     </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                        <Col>\r\n                                            \r\n                                        </Col>\r\n                                    <Col>\r\n                                       \r\n                                     \r\n                                     \r\n                                    </Col>\r\n                                    \r\n                                    \r\n                                </Row>\r\n                    </Container>\r\n                </div>\r\n                    )\r\n                  \r\n                    \r\n         \r\n    } else {\r\n        return(\r\n         <AcademicMem token={this.props.token} userId={this.props.userId} back={this.BACK}/>\r\n     )\r\n           \r\n       }\r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <div >\r\n//                 <div >\r\n\r\n//                 </div>\r\n                \r\n//                 <div >\r\n                        \r\n//                     </div>     \r\n        \r\n//             </div>    ","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseCoverage.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffCourse.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\Profile.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\Schedule.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SlotAssignment.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\DeletFromSlot.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\RemoveFromCourse.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffDept.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\AssignToSlot.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\Notification.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateSlot.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateProfile.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CourseCoordinator.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ResetPassword.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AcademicMem1.js",["346"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport Profile from './Profile'\r\nimport Schedule from './Schedule'\r\nimport VorCreq from './VorCreqs'\r\nimport ChangeDayOff from './ChangeDayOff'\r\nimport SendRepReq from './SendRepReq'\r\nimport Respond from './Respond'\r\nimport AnnualLeave from './AnnualLeave'\r\nimport MatLeave from './MatLeave'\r\nimport SickLeave from './SickLeave'\r\nimport AccLeave from './AccLeave'\r\nimport CompLeave from './CompLeave'\r\nimport SLLR from './SLLR'\r\nimport Notification from './Notification'\r\nimport {Navbar,Button,Nav,ButtonGroup,Dropdown,DropdownButton,Container,Row,Col} from 'react-bootstrap';\r\n//import { event } from \"jquery\";\r\n\r\nexport default class AcademicMem extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state=\r\n        ({\r\n            current:\"main\",\r\n            navigation:\"Main AM\"\r\n        })\r\n        this.HandleHome = this.HandleHome.bind(this)\r\n        this.HandleVORC = this.HandleVORC.bind(this)\r\n        this.HandleCDO = this.HandleCDO.bind(this)\r\n        this.HandleSRR = this.HandleSRR.bind(this)\r\n        this.HandleRES = this.HandleRES.bind(this)\r\n        this.HandleALR = this.HandleALR.bind(this)\r\n        this.HandleMLR = this.HandleMLR.bind(this)\r\n        this.HandleSLR = this.HandleSLR.bind(this)\r\n        this.HandleAcLR = this.HandleAcLR.bind(this)\r\n        this.HandleCLR = this.HandleCLR.bind(this)\r\n        this.HandleSLLR = this.HandleSLLR.bind(this)\r\n        this.HandleNOT = this.HandleNOT.bind(this)\r\n    }\r\n\r\n    store()\r\n    {\r\n        localStorage.setItem('am',JSON.stringify(this.state));\r\n    }\r\n    componentDidMount()\r\n  {\r\n    try {\r\n        this.documentData = JSON.parse(localStorage.getItem('am'));\r\n        //localStorage.clear()\r\n        if (localStorage.getItem('document')) {\r\n            this.setState({\r\n              current: this.documentData.current,\r\n              navigation: this.documentData.navigation,\r\n              \r\n        })\r\n         }\r\n         else {\r\n          this.setState({\r\n            current:\"main\",\r\n            navigation:\"Main AM\"\r\n          })\r\n      }\r\n      } catch (error) {\r\n        this.setState({\r\n            current:\"main\",\r\n         navigation:\"Main AM\"\r\n            \r\n      })\r\n      }\r\n  }\r\n  HandleHome(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"main\",\r\n                navigation:\"Main AM\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleNOT(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"NOT\",\r\n                navigation:\"Main AM/notification\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleVORC(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"VORC\",\r\n                navigation:\"Main AM/View or Cancel Requests\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleCDO(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"CDO\",\r\n                navigation:\"Main AM/Change Day Off Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleSRR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SRR\",\r\n                navigation:\"Main AM/Send Replacment Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleRES(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"RES\",\r\n                navigation:\"Main AM/respond to replacement request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleALR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"ALR\",\r\n                navigation:\"Main AM/Annual Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleMLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"MLR\",\r\n                navigation:\"Main AM/Matrernity Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleSLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SLR\",\r\n                navigation:\"Main AM/Sick Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleAcLR(event)\r\n    {\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"AcLR\",\r\n                navigation:\"Main AM/Acceidential Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleCLR(event)\r\n    {\r\n       // console.log(\"lol\")\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"CLR\",\r\n                navigation:\"Main AM/compensation Leave Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n\r\n    HandleSLLR(event)\r\n    {\r\n       // console.log(\"lol\")\r\n        event.preventDefault()\r\n        this.setState(\r\n            {\r\n                current:\"SLLR\",\r\n                navigation:\"Main AM/slot linking request Request\"\r\n            }\r\n            ,()=>this.store() )\r\n    }\r\n    HandleLogOut(token){\r\n                   \r\n        axios.post('http://localhost:4000/authentication/logout',{headers:{\r\n            'token':token\r\n        }})\r\n\r\n        .then(res=>\r\n            {\r\n                \r\n                \r\n                localStorage.clear();\r\n                window.location.reload();\r\n               // this.HandleLogOut()\r\n            })\r\n            .catch(err=>\r\n                {\r\n                    console.log(err)\r\n                })\r\n    }\r\n    render()\r\n    {\r\n        let x,y;\r\n        switch (this,this.state.current) {\r\n            case \"main\":{x=(<Schedule token={this.props.token} userid={this.props.userId}/>);y=(<Profile token={this.props.token} userid={this.props.userId}/>);break;}\r\n            \r\n            case \"VORC\":{x=(<VorCreq token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n            \r\n            case \"CDO\":{x=(<ChangeDayOff token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n\r\n            case \"SRR\":{\r\n               x=(<SendRepReq token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n            \r\n            case \"RES\":{\r\n                    x=(<Respond token={this.props.token} userid={this.props.userId}/>);y=(null);break;}\r\n                \r\n            case \"ALR\":{\r\n                    x=(<AnnualLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"MLR\":{\r\n                     x=(<MatLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"SLR\":{\r\n                     x=(<SickLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;} \r\n            case \"AcLR\":{\r\n                     x=(<AccLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"CLR\":{\r\n                     x=(<CompLeave token={this.props.token} userid={this.props.userId}/>);y=(null);break;} \r\n            case \"SLLR\":{\r\n                     x=(<SLLR token={this.props.token} userid={this.props.userId}/>);y=(null);break;}   \r\n            case \"NOT\":{\r\n                     x=(<Notification token={this.props.token} userid={this.props.userId}/>);y=(null);break;}                      \r\n            default:\r\n                break;\r\n        }\r\n        return(\r\n            <div >\r\n        \r\n        \r\n        <div >\r\n                <Navbar bg=\"dark\" variant=\"dark\" >\r\n                    <Navbar.Brand >{this.state.navigation}</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#features\" onClick={this.HandleNOT}>Notifications</Nav.Link>\r\n                    </Nav>\r\n                    <Button variant=\"outline-info\" onClick={()=>{console.log()\r\n                    this.HandleLogOut(this.props.token)\r\n         }}>Log Out</Button>\r\n                    <Button variant=\"outline-info\" onClick={this.HandleHome}>home</Button>\r\n                </Navbar>\r\n        </div>\r\n        <Container>\r\n                    <Row>\r\n                        <Col>                       \r\n                        <ButtonGroup vertical>\r\n                        <Button onClick={()=>{this.props.back()}} style={{background:\"gold\",color:\"grey\"}} >Back</Button>\r\n                        <Button onClick={this.HandleVORC} >View or cancel sent requests</Button>\r\n                        <Button onClick={this.HandleSLLR}>send slot linking request</Button>\r\n                        <Button onClick={this.HandleCDO}>change dayoff request</Button>\r\n\r\n\r\n\r\n                        <DropdownButton as={ButtonGroup} title=\"Replacment requests\" id=\"bg-vertical-dropdown-1\">\r\n                            <Dropdown.Item eventKey=\"1\" onClick={this.HandleSRR} >send</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" onClick={this.HandleRES} >responde</Dropdown.Item>\r\n                            \r\n                        </DropdownButton>\r\n\r\n                        <DropdownButton as={ButtonGroup} title=\"Leave requests\" id=\"bg-vertical-dropdown-1\">       \r\n                            <Dropdown.Item eventKey = \"1\" onClick={this.HandleAcLR}>AccidentalLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"2\" onClick={this.HandleCLR}>CompensationLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"3\" onClick={this.HandleSLR}>SickLeavesRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"4\" onClick={this.HandleMLR}>MaternityLeaveRequest</Dropdown.Item>\r\n                            <Dropdown.Item eventKey = \"5\" onClick={this.HandleALR}>annualleaverequest</Dropdown.Item>\r\n                        </DropdownButton>\r\n                       \r\n                        </ButtonGroup>        </Col>\r\n                        <Col>\r\n                        {x}\r\n                         </Col>\r\n                    </Row>\r\n                    <Row>\r\n                            <Col>\r\n                                \r\n                            </Col>\r\n                        <Col>\r\n                        {/* <Profile token={this.props.token} userid={this.props.userId}/> */}\r\n                         \r\n                        {y}\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n        </Container>\r\n    </div>\r\n        )\r\n    }\r\n}","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewAttendance.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SignOut.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SignIn.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewMissingDays.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewHours.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Profile.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Schedule.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\ChangeDayOff.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\VorCreqs.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SendRepReq.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Respond.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AccLeave.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\AnnualLeave.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SickLeave.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\MatLeave.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\CompLeave.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\Notification.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\AM\\SLLR.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewLeaveRequests.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewDayOffReq.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\CoursCoverag1.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\ViewDayOff.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffInDept1.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\StaffInCourse.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\SlotAssignment1.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\AssignCi.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\DeletCi.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\ci&hod\\UpdateCi.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Notification.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\ADDCS.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Profile.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\UPDCS.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\Respond.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\CC\\DELCS.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\HR.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddCourse.js",["347","348"],"// import jwt_decoded from \"jwt-decode\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Container,\r\n  } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n  \r\nclass AddCourse extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      courseID:\"\",\r\n      courseName:\"\",\r\n      faculty:\"\",\r\n      department_name:\"\",\r\n      numberOfSlots:\"\"\r\n    }\r\n    this.handle_add=this.handle_add.bind(this)\r\n  }\r\n    \r\n    async handle_add(event) {\r\n      event.preventDefault()\r\n        console.log(\"here\")\r\n        this.setState({\r\n            info:<Spinner animation=\"border\" variant=\"warning\" />\r\n        })\r\n        await axios\r\n          .post( //TODO\r\n            'http://localhost:4000/hr/courseEdit',\r\n            {\r\n              courseid: this.state.courseID,\r\n              coursename: this.state.courseName,\r\n              faculty: this.state.faculty,\r\n              department: this.state.department_name,\r\n              numberofslots: this.state.numberOfSlots,\r\n              \r\n            },\r\n            { headers: {\r\n              'token': this.props.token\r\n          }})\r\n          .then(result => {\r\n            if(result.data ===\"Course added\"){\r\n              this.setState({\r\n                info:\r\n                <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Text style={{color: 'white'}}>\r\n                            Course is added successfully\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                  info:\r\n                  <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                      <Card.Body>\r\n                          <Card.Text style={{color: 'white'}}>\r\n                              Error occurred while adding course\r\n                          </Card.Text>\r\n                      </Card.Body>\r\n                  </Card>\r\n              })\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(error.response.data.msg);\r\n          });\r\n      }\r\n\r\n      \r\n      render(){\r\n        return (\r\n          \r\n          <Container>\r\n            <Row>\r\n                <Col>\r\n                    {this.state.info}\r\n                </Col>\r\n                <Col>\r\n                    <Form onSubmit={this.handle_add}>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label style={{color: \"white\"}}>Course ID</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter The New Course ID\" onChange={e => this.setState({ courseID: e.target.value })}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                pleas make sure that the course id is unique\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label style={{color: \"white\"}}>Course Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter The New Course Name\" onChange={e => this.setState({ courseName: e.target.value })}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label style={{color: \"white\"}}>Faculty</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter The Name of The Faculty\" onChange={e => this.setState({ faculty: e.target.value })}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                The Faculty Name that the course belong to\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label style={{color: \"white\"}}>Department Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter The Name of The Department\" onChange={e => this.setState({ department_name: e.target.value })}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                The Department Name that the course belong to\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label style={{color: \"white\"}}>Number of Slots</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter The Number of The Teaching Slots\" onChange={e => this.setState({ numberOfSlots: e.target.value })}/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                The minimum number of the teaching slots needed for this course\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Add Course\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n          </Container>\r\n          \r\n        )\r\n      }\r\n    }\r\nexport default AddCourse;","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateFaculty.js",["349","350"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Spinner,\r\n  Card\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass UpdateFaculty extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      name:\"\",\r\n      newname:\"\"\r\n    }\r\n    this.handle_update = this.handle_update.bind(this)\r\n  }\r\n\r\n  async handle_update(event) {\r\n    console.log(\"here\")\r\n    event.preventDefault()\r\n    this.setState({\r\n      info:<Spinner animation=\"border\" variant=\"warning\" />\r\n    })\r\n    await axios\r\n      .put( //TODO\r\n        \"http://localhost:4000/hr/facultyEdit\",\r\n        {\r\n          name: this.state.name,\r\n          newname: this.state.newname\r\n        },\r\n        { headers: {\r\n          'token': this.props.token\r\n        }\r\n      })\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\" updated to \")){\r\n          this.setState({\r\n            info:\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while updating faculty please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          })\r\n        }\r\n        else{\r\n          \r\n            this.setState({\r\n              info:\r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {this.state.name} is updated to {this.state.newname}\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            })\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  render(){\r\n    return (\r\n      <Container>\r\n        <Row>\r\n            <Col>\r\n                {this.state.info}\r\n            </Col>\r\n            <Col>\r\n                <Form onSubmit={this.handle_update}>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Faculty Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Faculty Name\" onChange={e => this.setState({ name: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Faculty New Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Faculty New Name\" onChange={e => this.setState({ newname: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Faculty\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n};\r\n\r\nexport default UpdateFaculty;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddFaculty.js",["351","352"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Spinner,\r\n  Card\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass AddFaculty extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      name:\"\"\r\n    }\r\n    this.handle_add = this.handle_add.bind(this)\r\n  }\r\n\r\n  async handle_add(event) {\r\n    console.log(\"here\")\r\n    event.preventDefault()\r\n    this.setState({\r\n      info:<Spinner animation=\"border\" variant=\"warning\" />\r\n    })\r\n    await axios\r\n      .post( //TODO\r\n        \"http://localhost:4000/hr/facultyEdit\",\r\n        {\r\n          name: this.state.name,\r\n        },\r\n        { headers: {\r\n          'token': this.props.token\r\n        }\r\n      })\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\" faculty has been added\")){\r\n          this.setState({\r\n            info:\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while adding faculty please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          })\r\n        }\r\n        else{\r\n          \r\n            this.setState({\r\n              info:\r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {this.state.name} faculty has been added\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            })\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  render(){\r\n    return (\r\n      <Container>\r\n        <Row>\r\n            <Col>\r\n                {this.state.info}\r\n            </Col>\r\n            <Col>\r\n                <Form onSubmit={this.handle_add}>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Faculty Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Faculty Name\" onChange={e => this.setState({ name: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Add Faculty\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n};\r\n\r\nexport default AddFaculty;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateCourse.js",["353","354"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Spinner,\r\n  Card\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass UpdateCourse extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      courseID:\"\",\r\n      courseName:\"\",\r\n      faculty:\"\",\r\n      department_name:\"\",\r\n      numberOfSlots:\"\"\r\n    }\r\n    this.handle_update=this.handle_update.bind(this)\r\n  }\r\n  async handle_update(event) {\r\n    event.preventDefault()\r\n    this.setState({\r\n      info:<Spinner animation=\"border\" variant=\"warning\" />\r\n    })\r\n    await axios\r\n          .put( //TODO\r\n            'http://localhost:4000/hr/courseEdit',\r\n            {\r\n              courseid: this.state.courseID,\r\n              coursename: this.state.courseName,\r\n              faculty: this.state.faculty,\r\n              department: this.state.department_name,\r\n              numberofslots: this.state.numberOfSlots,\r\n            },\r\n            { headers: {\r\n              'token': this.props.token\r\n          }})\r\n          .then(result => {\r\n            if(result.data ===\"course updated\"){\r\n              this.setState({\r\n                info:\r\n                <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Text style={{color: 'white'}}>\r\n                            Course is updated successfully\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n              })\r\n            }\r\n            else{\r\n              this.setState({\r\n                  info:\r\n                  <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                      <Card.Body>\r\n                          <Card.Text style={{color: 'white'}}>\r\n                              Error occurred while updating course\r\n                          </Card.Text>\r\n                      </Card.Body>\r\n                  </Card>\r\n              })\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(error.response.data.msg);\r\n          });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      \r\n      <Container>\r\n        <Row>\r\n            <Col>\r\n                {this.state.info}\r\n            </Col>\r\n            <Col>\r\n                <Form onSubmit={this.handle_update}>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Course ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Course ID\" onChange={e => this.setState({ courseID: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Course Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The New Course Name\" onChange={e => this.setState({ courseName: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Faculty</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Name of The Faculty\" onChange={e => this.setState({ faculty: e.target.value })}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            The Faculty Name that the course belong to\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Department Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Name of The Department\" onChange={e => this.setState({ department_name: e.target.value })}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            The Department Name that the course belong to\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Number of Slots</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Number of The Teaching Slots\" onChange={e => this.setState({ numberOfSlots: e.target.value })}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            The minimum number of the teaching slots needed for this course\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Course\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n};\r\nexport default UpdateCourse;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteFaculty.js",["355","356"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Spinner,\r\n  Card\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass DeleteFaculty extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      name:\"\",\r\n      newname:\"\"\r\n    }\r\n    this.handle_delete = this.handle_delete.bind(this)\r\n  }\r\n\r\n  async handle_delete(event) {\r\n    console.log(\"here\")\r\n    event.preventDefault()\r\n    this.setState({\r\n      info:<Spinner animation=\"border\" variant=\"warning\" />\r\n    })\r\n    await axios\r\n      .delete( //TODO\r\n        \"http://localhost:4000/hr/facultyEdit\",{\r\n          headers: {\r\n              'token': this.props.token\r\n          },\r\n          data: {\r\n              name : this.state.name,\r\n          }\r\n        })\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\" deleted\")){\r\n          this.setState({\r\n            info:\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while deleting faculty please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          })\r\n        }\r\n        else{\r\n          \r\n            this.setState({\r\n              info:\r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {this.state.name} is deleted Successfully\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            })\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  render(){\r\n    return (\r\n      <Container>\r\n        <Row>\r\n            <Col>\r\n                {this.state.info}\r\n            </Col>\r\n            <Col>\r\n                <Form onSubmit={this.handle_delete}>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Faculty Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Faculty Name\" onChange={e => this.setState({ name: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" type=\"submit\">\r\n                        Delete Faculty\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n};\r\n\r\nexport default DeleteFaculty;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateDepartment.js",["357"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from  \"axios\"\r\n\r\nconst UpdateDepartment = (props) => {\r\n  const [info, setInfo]=useState(\"\");\r\n  const [facultyName, setFaculty] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [newName, setNew] = useState(\"\");\r\n  const handle_update = async () => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .put( //TODO\r\n        \"http://localhost:4000/hr/departmentEdit\",\r\n        {\r\n          faculty: facultyName,\r\n          department: department,\r\n          newdepartment: newName,\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"updated to\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while updating the department please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {department} is updated to {newName}\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        alert(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Faculty</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"@Engineering\"\r\n                  value={facultyName}\r\n                  onChange={(e) => {\r\n                    setFaculty(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter The Faculty Name\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Department Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"@MET\"\r\n                  value={department}\r\n                  onChange={(e) => {\r\n                    setDepartment(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter the Old Department Name\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>New Department Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"@MET\"\r\n                  value={newName}\r\n                  onChange={(e) => {\r\n                    setNew(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter The new Department Name \r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" onClick={handle_update}>\r\n              Update Department\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateDepartment;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteDepartment.js",["358"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst DeleteDepartment = (props) => {\r\n  const [info, setInfo]=useState(\"\");\r\n  const [facultyName, setFaculty] = useState(\"\");\r\n  const [department, setName] = useState(\"\");\r\n\r\n  const handle_delete = async () => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .delete( //TODO\r\n        \"http://localhost:4000/hr/departmentEdit\",\r\n        {\r\n          headers: {\r\n              'token': props.token\r\n          },\r\n          data: {\r\n            faculty: facultyName,\r\n            department: department,\r\n          }\r\n        }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"has been deleted\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while delete the department please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {department} has been deleted\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n      <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Faculty Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"@Engineering\"\r\n                  value={facultyName}\r\n                  onChange={(e) => {\r\n                    setFaculty(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter Faculty Name\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Department Name</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"@MET\"\r\n                  value={department}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter Department Name\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Button\r\n              class=\"d-flex justify-content-center\"\r\n              variant=\"danger\"\r\n              onClick={handle_delete}\r\n            >\r\n              Delete Department\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDepartment;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddDepartment.js",["359"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from  \"axios\"\r\n\r\nconst AddDepartment = (props) => {\r\n  const [info, setInfo] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [faculty, setFaculty] = useState(\"\");\r\n  const [hod, setHOD] = useState(\"\");\r\n  const handle_add = async () => {\r\n    console.log(props.token)\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .post( //TODO\r\n        \"http://localhost:4000/hr/departmentEdit\",\r\n        {\r\n          faculty: faculty,\r\n          department: name,\r\n          hod: hod,\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"added\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while adding department please revise your data\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {name} has been added\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          {info}\r\n        </Col>\r\n        <Col>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label style={{color:\"white\"}}>Faculty</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Faculty Name\"\r\n                value={faculty}\r\n                onChange={(e) => {\r\n                  setFaculty(e.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                The Faculty Name of The Department\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label style={{color:\"white\"}}>Department Name</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Department Name\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Department Name\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label style={{color:\"white\"}}>Head Of Department ID</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter ID of HOD\"\r\n                value={hod}\r\n                onChange={(e) => {\r\n                  setHOD(e.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Assign HOD\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n          <Button\r\n            class=\"d-flex justify-content-center\"\r\n            variant=\"primary\"\r\n            onClick={handle_add}\r\n          >\r\n            Add Department\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddDepartment;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteCourse.js",["360","361"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Spinner,\r\n  Card\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass DeleteCourse extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      info:null,\r\n      courseID:\"\"\r\n    }\r\n    this.handle_delete = this.handle_delete.bind(this)\r\n  }\r\n  async handle_delete(event) {\r\n    event.preventDefault()\r\n    console.log(this.props.token)\r\n    this.setState({\r\n      info:<Spinner animation=\"border\" variant=\"warning\" />\r\n    })\r\n    await axios\r\n      .delete( //TODO\r\n        \"http://localhost:4000/hr/courseEdit\", {\r\n          headers: {\r\n              'token': this.props.token\r\n          },\r\n          data: {\r\n              courseid:this.state.courseID,\r\n          }\r\n        })\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(result.data ===\"course deleted\"){\r\n          this.setState({\r\n            info:\r\n            <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                        Course is Deleted successfully\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          })\r\n        }\r\n        else{\r\n          this.setState({\r\n              info:\r\n              <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          Error occurred while deleting course\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  render(){\r\n    return (\r\n      \r\n      <Container>\r\n        <Row>\r\n            <Col>\r\n                {this.state.info}\r\n            </Col>\r\n            <Col>\r\n                <Form onSubmit={this.handle_delete}>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label style={{color: \"white\"}}>Course ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter The Course ID\" onChange={e => this.setState({ courseID: e.target.value })}/>\r\n                    </Form.Group>\r\n                    <Button variant=\"danger\" type=\"submit\">\r\n                        Delete Course\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n    )\r\n  }\r\n};\r\n\r\nexport default DeleteCourse;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddLocation.js",["362"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst AddLocation = (props) => {\r\n  const [info, setInfo] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loc_type, setType] = useState(\"\");\r\n  const [max_capacity, setMax] = useState(\"\");\r\n\r\n  const handle_add = async () => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .post(//TODO\r\n        \"http://localhost:4000/hr/locationEdit\",\r\n        {\r\n          room: name,\r\n          type: loc_type,\r\n          capacity: max_capacity,\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"Location added\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error ocurred while adding the location\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {name} has been deleted\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Room Number</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"C7.012\"\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter Room Number\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            \r\n\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Select Room Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  value={loc_type}\r\n                  onChange={(e) => {\r\n                    setType(e.target.value);\r\n                  }}\r\n                  id=\"max_capacity\"\r\n                >\r\n                  <option>Lecture Hall</option>\r\n                  <option>Lab</option>\r\n                  <option>Office</option>\r\n                  <option>Tutorial</option>\r\n                </Form.Control>\r\n                <Form.Text className=\"text-muted\">\r\n                  Select the room type you want to add\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Maximum Room Capacity</Form.Label>\r\n                <Form.Control\r\n                  value={max_capacity}\r\n                  onChange={(e) => {\r\n                    setMax(e.target.value);\r\n                  }}\r\n                  id=\"max_capacity\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Maximum number of people in room\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" onClick={handle_add}>\r\n              Add Location\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLocation;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateLocation.js",["363"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst UpdateLocation = (props) => {\r\n  const [info, setInfo] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loc_type, setType] = useState(\"\");\r\n  const [max_capacity, setMax] = useState(\"\");\r\n\r\n  const handle_update = async () => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .put( //TODO\r\n        \"http://localhost:4000/hr/locationEdit\",\r\n        {\r\n          room: name,\r\n          type: loc_type,\r\n          capacity: max_capacity,\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"has been updated\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      The room you are trying to update doesnt exist\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          location: {name} has been updated\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Room Number</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"C7.012\"\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter Room Number\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            \r\n\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Select Room Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  value={loc_type}\r\n                  onChange={(e) => {\r\n                    setType(e.target.value);\r\n                  }}\r\n                  id=\"max_capacity\"\r\n                >\r\n                  <option>Lecture Hall</option>\r\n                  <option>Lab</option>\r\n                  <option>Office</option>\r\n                  <option>Tutorial</option>\r\n                </Form.Control>\r\n                <Form.Text className=\"text-muted\">\r\n                  Select the room type you want to add\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Maximum Room Capacity</Form.Label>\r\n                <Form.Control\r\n                  value={max_capacity}\r\n                  onChange={(e) => {\r\n                    setMax(e.target.value);\r\n                  }}\r\n                  id=\"max_capacity\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Maximum number of people in room\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" onClick={handle_update}>\r\n              Update Location\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateLocation;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddUser.js",["364","365","366","367","368","369","370"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\n\r\nconst AddUser = (props) => {\r\n  const [info, setInfo]= useState(\"\")\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"M\");\r\n  const [type, setUserType] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const [day_off, setDayOff] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [department, setDepartment]=useState(\"\");\r\n  const [faculty, setFaculty]=useState(\"\");\r\n\r\n  const handle_add = async() => {\r\n    console.log(day_off)\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .post(//TODO\r\n        \"http://localhost:4000/hr/addUser\",\r\n        {\r\n          name: name,\r\n          email: email,\r\n          office: location,\r\n          salary: salary,\r\n          userType: type,\r\n          dayoff: day_off,\r\n          department:department,\r\n          faculty:faculty,\r\n          \r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(result.data.id != null){\r\n          setInfo(\r\n            <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      User is added Successfully\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {result.data}\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setInfo(\r\n          <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n              <Card.Body>\r\n                  <Card.Text style={{color: 'white'}}>\r\n                    Error occurred while adding staff member\r\n                  </Card.Text>\r\n              </Card.Body>\r\n          </Card>\r\n        )\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Name</Form.Label>\r\n                <Form.Control\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Faculty</Form.Label>\r\n                <Form.Control\r\n                  value={faculty}\r\n                  onChange={(e) => {\r\n                    setFaculty(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Department</Form.Label>\r\n                <Form.Control\r\n                  value={department}\r\n                  onChange={(e) => {\r\n                    setDepartment(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label style={{color: 'white'}}>Email</Form.Label>\r\n                <Form.Control\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                  placeholder=\"example@gmail.com\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Form>\r\n              <Form.Group controlId=\"exampleForm.SelectCustomSizelg\">\r\n                <Form.Label style={{color: 'white'}}>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={gender}\r\n                  onChange={(e) => {\r\n                    setGender(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                  id=\"gender\"\r\n                >\r\n                  <option value = \"Male\">Male</option>\r\n                  <option value = \"Female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Salary</Form.Label>\r\n                <Form.Control\r\n                  value={salary}\r\n                  onChange={(e) => {\r\n                    setSalary(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group controlId=\"exampleForm.SelectCustomSizelg\">\r\n                <Form.Label style={{color: 'white'}}>Day Off</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={day_off}\r\n                  onChange={(e) => {\r\n                    setDayOff(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                  id={day_off}\r\n                >\r\n                  \r\n                  <option value=\"saturday\">saturday</option>\r\n                  <option value=\"sunday\">sunday</option>\r\n                  <option value=\"monday\">monday</option>\r\n                  <option value=\"tuesday\">tuesday</option>\r\n                  <option value=\"wednesday\">wednesday</option>\r\n                  <option value=\"thursday\">thursday</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>User Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={type}\r\n                  onChange={(e) => {\r\n                    setUserType(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                >\r\n                  <option value = \"hr\">HR</option>\r\n                  <option value = \"ci\">CI</option>\r\n                  <option value = \"cc\">CC</option>\r\n                  <option value = \"hod\">HOD</option>\r\n                  <option value = \"am\">TA</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Office Location</Form.Label>\r\n                <Form.Control\r\n                  value={location}\r\n                  onChange={(e) => {\r\n                    setLocation(e.target.value);\r\n                  }}\r\n                  placeholder=\"@C7-202\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" onClick={handle_add}>\r\n              Add User\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default AddUser;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteLocation.js",["371","372"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst token = localStorage.getItem(\"user\");\r\n\r\nconst DeleteLocation = (props) => {\r\n  const [info, setInfo] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n\r\n  const handle_Delete = async () => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .delete( //TODO\r\n        \"http://localhost:4000/hr/locationEdit\",\r\n        {\r\n          headers: {\r\n              'token': props.token\r\n          },\r\n          data: {\r\n            room: name\r\n          }\r\n        }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"Location deleted\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Problem occurred while deleting room\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {name} is deleted\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.msg);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Room Number</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"C3-201\"\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter Room Number to be deleted\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Button variant=\"danger\" onClick={handle_Delete}>\r\n              Delete Location\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default DeleteLocation;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateUser.js",["373","374","375","376","377","378","379"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\n\r\nconst UpdateUser = (props) => {\r\n  const [info, setInfo]= useState(\"\")\r\n  const [id, setid] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"M\");\r\n  const [type, setUserType] = useState(\"\");\r\n  const [day_off, setDayOff] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [department, setDepartment]=useState(\"\");\r\n  const [faculty, setFaculty]=useState(\"\");\r\n\r\n  const handle_update = async() => {\r\n    console.log(day_off)\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    console.log(\"asd\")\r\n    await axios\r\n      .put(//TODO\r\n        \"http://localhost:4000/hr/editStaffMember\",\r\n        {\r\n            staffid: id,\r\n            email: email,\r\n            department:department,\r\n            faculty:faculty,\r\n            userType: type,\r\n            office: location,\r\n            dayoff: day_off,\r\n            gender:gender\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(result.data.includes(\"staff member updated \")){\r\n          setInfo(\r\n            <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                        Staff member is updated\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n            setInfo(\r\n              \r\n              <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {result.data}\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setInfo(\r\n          <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n              <Card.Body>\r\n                  <Card.Text style={{color: 'white'}}>\r\n                    Error occurred while adding staff member\r\n                  </Card.Text>\r\n              </Card.Body>\r\n          </Card>\r\n        )\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Staff ID</Form.Label>\r\n                <Form.Control\r\n                  value={id}\r\n                  onChange={(e) => {\r\n                    setid(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Faculty</Form.Label>\r\n                <Form.Control\r\n                  value={faculty}\r\n                  onChange={(e) => {\r\n                    setFaculty(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Department</Form.Label>\r\n                <Form.Control\r\n                  value={department}\r\n                  onChange={(e) => {\r\n                    setDepartment(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label style={{color: 'white'}}>Email</Form.Label>\r\n                <Form.Control\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                  placeholder=\"example@gmail.com\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Form>\r\n              <Form.Group controlId=\"exampleForm.SelectCustomSizelg\">\r\n                <Form.Label style={{color: 'white'}}>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={gender}\r\n                  onChange={(e) => {\r\n                    setGender(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                  id=\"gender\"\r\n                >\r\n                  <option value = \"Male\">Male</option>\r\n                  <option value = \"Female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group controlId=\"exampleForm.SelectCustomSizelg\">\r\n                <Form.Label style={{color: 'white'}}>Day Off</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={day_off}\r\n                  onChange={(e) => {\r\n                    setDayOff(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                  id={day_off}\r\n                >\r\n                  <option>-</option>\r\n                  <option value=\"saturday\">saturday</option>\r\n                  <option value=\"sunday\">sunday</option>\r\n                  <option value=\"monday\">monday</option>\r\n                  <option value=\"tuesday\">tuesday</option>\r\n                  <option value=\"wednesday\">wednesday</option>\r\n                  <option value=\"thursday\">thursday</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>User Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  size=\"lg\"\r\n                  custom\r\n                  value={type}\r\n                  onChange={(e) => {\r\n                    setUserType(e.target.value);\r\n                  }}\r\n                  as=\"select\" custom\r\n                >\r\n                  <option value = \"hr\">HR</option>\r\n                  <option value = \"ci\">CI</option>\r\n                  <option value = \"cc\">CC</option>\r\n                  <option value = \"hod\">HOD</option>\r\n                  <option value = \"am\">TA</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>Office Location</Form.Label>\r\n                <Form.Control\r\n                  value={location}\r\n                  onChange={(e) => {\r\n                    setLocation(e.target.value);\r\n                  }}\r\n                  placeholder=\"@C7-202\"\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" onClick={handle_update}>\r\n              Update User\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default UpdateUser;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\DeleteUser.js",["380","381"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\n\r\nconst DeleteUser = (props) => {\r\n  const [info, setInfo] = useState(\"\")\r\n  const [id, setID] = useState(\"\");\r\n\r\n  const handle_delete = () => {\r\n    axios\r\n      .delete( //TODO\r\n        \"http://localhost:4000/hr/editStaffMember\",\r\n        {\r\n          headers: {\r\n              'token': props.token\r\n          },\r\n          data: {\r\n            staffid:id\r\n          }\r\n        }\r\n      )\r\n      .then(result => {\r\n        console.log(result.data)\r\n        if(!result.data.includes(\"staff member removed\")){\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Error occurred while deleting staff member\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          \r\n            setInfo(\r\n              \r\n              <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                  <Card.Body>\r\n                      <Card.Text style={{color: 'white'}}>\r\n                          {id} has been deleted\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n            )\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setInfo(\r\n          <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n              <Card.Body>\r\n                  <Card.Text style={{color: 'white'}}>\r\n                    Error occurred while deleting staff member\r\n                  </Card.Text>\r\n              </Card.Body>\r\n          </Card>\r\n        )\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n      <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>User ID</Form.Label>\r\n\r\n                <Form.Control\r\n                  placeholder=\"@ac-1\"\r\n                  value={id}\r\n                  onChange={(e) => {\r\n                    setID(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter User's ID to be deleted\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Button variant=\"danger\" onClick={handle_delete}>\r\n              Delete Staff Member\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default DeleteUser;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\UpdateSalary.js",["382","383"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst token = localStorage.getItem(\"user\");\r\n\r\nconst Update_Salary = (props) => {\r\n  const [info, setInfo] = useState(\"\")\r\n  const [id, setID] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n\r\n  const handle_update = async() => {\r\n    setInfo(\r\n      <Spinner animation=\"border\" variant=\"warning\" />\r\n    )\r\n    await axios\r\n      .post(//TODO\r\n        \"http://localhost:4000/hr/editStaffSalary\",\r\n        {\r\n          staffid: id,\r\n          newsalary: salary,\r\n        },\r\n        { headers: { 'token': props.token } }\r\n      )\r\n      .then(result=>{\r\n        if(result.data.includes(\"salary updated to\")){\r\n          setInfo(\r\n            <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                      Salary is updated to {id}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n        else{\r\n          setInfo(\r\n            <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                <Card.Body>\r\n                    <Card.Text style={{color: 'white'}}>\r\n                        Error occurred while saving staff salary\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n          )\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setInfo(\r\n          <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n              <Card.Body>\r\n                  <Card.Text style={{color: 'white'}}>\r\n                      Error occurred while saving staff salary\r\n                  </Card.Text>\r\n              </Card.Body>\r\n          </Card>\r\n        )\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            {info}\r\n          </Col>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>User ID</Form.Label>\r\n\r\n                <Form.Control\r\n                  placeholder=\"@ac-4\"\r\n                  value={id}\r\n                  onChange={(e) => {\r\n                    setID(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">\r\n                  Enter The User ID\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label style={{color: 'white'}}>New Salary </Form.Label>\r\n\r\n                <Form.Control\r\n                  value={salary}\r\n                  onChange={(e) => {\r\n                    setSalary(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <Form.Text className=\"text-muted\">Enter new Salary</Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <Button variant=\"primary\" onClick={handle_update}>\r\n              Update Salary\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Update_Salary;\r\n","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddSignIn.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AddSignOut.js",[],"D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\AssignHOD.js",["384"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass AssignHOD extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            info:null,\r\n            staffid:\"\",\r\n            department:\"\"\r\n        }\r\n        this.HandleAssignHOD = this.HandleAssignHOD.bind(this)\r\n    }\r\n    async HandleAssignHOD(event){\r\n        event.preventDefault()\r\n        console.log(\"here\")\r\n        this.setState({\r\n            info:<Spinner animation=\"border\" variant=\"warning\"/>\r\n        })\r\n        await axios.post(\"http://localhost:4000/hr/assignHOD\",{\r\n            staffid: this.state.staffid,\r\n            department: this.state.department\r\n        },{headers: { 'token':this.props.token}\r\n        }).then(result=>{\r\n            if(result.data === \"HOD assigned\"){\r\n                this.setState({\r\n                    info:\r\n                        <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Text style={{color: 'white'}}>\r\n                                    HOD Is Assigned Successfully\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    info:\r\n                    <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text style={{color: 'white'}}>\r\n                                Error occured while assigning the HOD\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        {this.state.info}\r\n                    </Col>\r\n                    <Col>\r\n                        <Form onSubmit={this.HandleAssignHOD}>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label style={{color:\"white\"}}>HOD ID</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter The HOD ID\" onChange={e => this.setState({ staffid: e.target.value })}/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label style={{color:\"white\"}}>Department</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter The Department Name\" onChange={e => this.setState({ department: e.target.value })}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    The Department which the HOD will be assigned to\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Assign HOD\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default AssignHOD","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\ViewStaffWithMissingHours.js",["385","386","387","388","389","390"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass ViewStaffWithMissingHours extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            info:null\r\n        }\r\n        // this.HandleViewStaffWithMissingHours = this.HandleViewStaffWithMissingHours.bind(this)\r\n    }\r\n    async componentDidMount(event){\r\n        // event.preventDefault()\r\n        this.setState({\r\n            info:<Spinner animation=\"border\" variant=\"warning\"/>\r\n        })\r\n        await axios.get(\"http://localhost:4000/hr/staffmissinghours\",\r\n            {headers: { 'token':this.props.token}\r\n        }).then(result=>{\r\n            if(result.data===\"Error occurred while getting users with missing hours\"){\r\n                this.setState({\r\n                    info:\r\n                    <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text style={{color: 'white'}}>\r\n                                {this.result.data}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    info:\r\n                        result.data.map(d=>{\r\n                            if(d != null){\r\n                                \r\n                                    return <ListGroup>\r\n                                                <ListGroup.Item>{\"Name: \"+d.name}</ListGroup.Item>\r\n                                                <ListGroup.Item>{\"Missing Hours: \"+d.missinghours}</ListGroup.Item>\r\n                                                <ListGroup.Item>{\"ID: \"+d.id}</ListGroup.Item>,\r\n                                            </ListGroup>\r\n\r\n                                \r\n                            }\r\n                        })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.info}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewStaffWithMissingHours","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\ViewStaffAttendance.js",["391","392","393"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass viewStaffAttendance extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            info:null,\r\n            staffid:\"\"\r\n        }\r\n        this.HandleViewStaffAttendance = this.HandleViewStaffAttendance.bind(this)\r\n    }\r\n    async HandleViewStaffAttendance(event){\r\n        event.preventDefault()\r\n        this.setState({\r\n            info:<Spinner animation=\"border\" variant=\"warning\"/>\r\n        })\r\n        await axios.post(\"http://localhost:4000/hr/viewStaffAttendance\",\r\n            {\r\n                staffid: this.state.staffid\r\n            },\r\n            {headers: { 'token':this.props.token}}\r\n            \r\n        ).then(result=>{\r\n            console.log(result.data)\r\n            if(result.data === \"this user didnt sign in or out yet :(\"){\r\n                this.setState({\r\n                    info:\r\n                    <Card bg={'success'} style={{ width: '15rem',height:'10rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text style={{color: 'white'}}>\r\n                                {this.state.staffid} didn't sign in or out yet\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                })\r\n            }\r\n            else{\r\n                if(result.data === \"an error occurred while viewing the attendance\"){\r\n                    this.setState({\r\n                        info:\r\n                        <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Text style={{color: 'white'}}>\r\n                                    {this.result.data}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    })\r\n                }\r\n                else{\r\n                    let Attend=[]\r\n                    let Record=[]\r\n                    for(let i=0;i<result.data.length;i++){\r\n                        for(let j=0;j<result.data[i].signs.length;j++){\r\n                            if(result.data[i].signs[j].signin !=null)\r\n                                Record.push(result.data[i].signs[j])\r\n                            if(result.data[i].signs[j].signout !=null)\r\n                                Record.push(result.data[i].signs[j])\r\n                        }\r\n                        Record.push(result.data[i].date)\r\n                        Record.push(result.data[i].dayname)\r\n                        Attend.push(Record)\r\n                        Record=[]\r\n                    }\r\n                    this.setState({\r\n                        info:\r\n                            Attend.map(key=>{\r\n                                return <ListGroup.Item>{key.map(d=>{\r\n                                    if(d != null){\r\n                                        if(d.signin != undefined){\r\n                                            return <ListGroup.Item>{\"SignIn: \"+d.signin}</ListGroup.Item>\r\n                                        }\r\n                                        else {\r\n                                            if(d.signout != undefined){\r\n                                                return <ListGroup.Item>{\"SignOut: \"+d.signout}</ListGroup.Item>\r\n                                            }\r\n                                            else{\r\n                                                if(!isNaN(d.charAt(0))){\r\n                                                    return <ListGroup.Item>{\"Date: \"+d}</ListGroup.Item>\r\n                                                }\r\n                                                else{\r\n                                                    return <ListGroup.Item>{\"Day: \"+d}</ListGroup.Item>\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                })\r\n                                }</ListGroup.Item>\r\n                            })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        {this.state.info}\r\n                    </Col>\r\n                    <Col>\r\n                        <Form onSubmit={this.HandleViewStaffAttendance}>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label style={{color:\"white\"}}>Staff ID</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter The Staff ID\" onChange={e => this.setState({ staffid: e.target.value })}/>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                View Attendance\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default viewStaffAttendance","D:\\Uni\\Semester 7\\CSEN 704 Advanced Computer Lab\\Project\\Team 14\\GUC-Portal\\myapp\\src\\components\\HR\\viewStaffWithMissingDays.js",["394","395","396","397","398","399"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Card,\r\n  Form,\r\n  Container,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass ViewStaffWithMissingDays extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            info:null\r\n        }\r\n        // this.HandleViewStaffWithMissingHours = this.HandleViewStaffWithMissingHours.bind(this)\r\n    }\r\n    async componentDidMount(event){\r\n        // event.preventDefault()\r\n        this.setState({\r\n            info:<Spinner animation=\"border\" variant=\"warning\"/>\r\n        })\r\n        await axios.get(\"http://localhost:4000/hr/staffmissingdays\",\r\n            {headers: { 'token':this.props.token}\r\n        }).then(result=>{\r\n            if(result.data===\"error occurred while getting staff missing days\"){\r\n                this.setState({\r\n                    info:\r\n                    <Card bg={'warning'} style={{ width: '15rem',height:'10rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text style={{color: 'white'}}>\r\n                                {this.result.data}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    info:\r\n                        result.data.map(d=>{\r\n                            if(d != null){\r\n                                return <ListGroup>\r\n                                            <ListGroup.Item>{\"Name: \"+d.name}</ListGroup.Item>\r\n                                            <ListGroup.Item>{\"Number Of Missing Days: \"+d.missingdays}</ListGroup.Item>\r\n                                            <ListGroup.Item>{\"ID: \"+d.id}</ListGroup.Item>,\r\n                                        </ListGroup>\r\n                            }\r\n                        })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.info}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewStaffWithMissingDays",{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":288,"column":21,"nodeType":"406","messageId":"407","endLine":288,"endColumn":22},{"ruleId":"408","severity":1,"message":"409","line":236,"column":3,"nodeType":"410","messageId":"411","endLine":243,"endColumn":2},{"ruleId":"404","severity":1,"message":"405","line":223,"column":21,"nodeType":"406","messageId":"407","endLine":223,"endColumn":22},{"ruleId":"412","severity":1,"message":"413","line":2,"column":17,"nodeType":"414","messageId":"415","endLine":2,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":2,"column":27,"nodeType":"414","messageId":"415","endLine":2,"endColumn":36},{"ruleId":"412","severity":1,"message":"413","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"413","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"413","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"413","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":2,"column":27,"nodeType":"414","messageId":"415","endLine":2,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"413","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":154,"column":19,"nodeType":"419","endLine":154,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":154,"column":31,"nodeType":"419","endLine":154,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":184,"column":19,"nodeType":"419","endLine":184,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":184,"column":31,"nodeType":"419","endLine":184,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":208,"column":19,"nodeType":"419","endLine":208,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":208,"column":31,"nodeType":"419","endLine":208,"endColumn":37},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"420","line":15,"column":7,"nodeType":"414","messageId":"415","endLine":15,"endColumn":12},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"417","severity":1,"message":"418","line":152,"column":19,"nodeType":"419","endLine":152,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":152,"column":31,"nodeType":"419","endLine":152,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":171,"column":19,"nodeType":"419","endLine":171,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":171,"column":31,"nodeType":"419","endLine":171,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":195,"column":19,"nodeType":"419","endLine":195,"endColumn":30},{"ruleId":"417","severity":1,"message":"418","line":195,"column":31,"nodeType":"419","endLine":195,"endColumn":37},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"421","line":8,"column":3,"nodeType":"414","messageId":"415","endLine":8,"endColumn":10},{"ruleId":"412","severity":1,"message":"416","line":1,"column":27,"nodeType":"414","messageId":"415","endLine":1,"endColumn":36},{"ruleId":"412","severity":1,"message":"420","line":16,"column":7,"nodeType":"414","messageId":"415","endLine":16,"endColumn":12},{"ruleId":"412","severity":1,"message":"422","line":11,"column":3,"nodeType":"414","messageId":"415","endLine":11,"endColumn":12},{"ruleId":"412","severity":1,"message":"423","line":4,"column":3,"nodeType":"414","messageId":"415","endLine":4,"endColumn":9},{"ruleId":"412","severity":1,"message":"424","line":5,"column":3,"nodeType":"414","messageId":"415","endLine":5,"endColumn":6},{"ruleId":"412","severity":1,"message":"425","line":6,"column":3,"nodeType":"414","messageId":"415","endLine":6,"endColumn":6},{"ruleId":"412","severity":1,"message":"426","line":9,"column":3,"nodeType":"414","messageId":"415","endLine":9,"endColumn":7},{"ruleId":"412","severity":1,"message":"427","line":10,"column":3,"nodeType":"414","messageId":"415","endLine":10,"endColumn":12},{"ruleId":"428","severity":1,"message":"429","line":46,"column":42,"nodeType":"430","messageId":"431","endLine":46,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":80,"column":66,"nodeType":"430","messageId":"431","endLine":80,"endColumn":68},{"ruleId":"432","severity":1,"message":"433","line":82,"column":53,"nodeType":"434","messageId":"411","endLine":82,"endColumn":55},{"ruleId":"432","severity":1,"message":"433","line":86,"column":58,"nodeType":"434","messageId":"411","endLine":86,"endColumn":60},{"ruleId":"412","severity":1,"message":"423","line":4,"column":3,"nodeType":"414","messageId":"415","endLine":4,"endColumn":9},{"ruleId":"412","severity":1,"message":"424","line":5,"column":3,"nodeType":"414","messageId":"415","endLine":5,"endColumn":6},{"ruleId":"412","severity":1,"message":"425","line":6,"column":3,"nodeType":"414","messageId":"415","endLine":6,"endColumn":6},{"ruleId":"412","severity":1,"message":"426","line":9,"column":3,"nodeType":"414","messageId":"415","endLine":9,"endColumn":7},{"ruleId":"412","severity":1,"message":"427","line":10,"column":3,"nodeType":"414","messageId":"415","endLine":10,"endColumn":12},{"ruleId":"428","severity":1,"message":"429","line":46,"column":42,"nodeType":"430","messageId":"431","endLine":46,"endColumn":44},"no-native-reassign",["435"],"no-negated-in-lhs",["436"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-dupe-class-members","Duplicate name 'HandleCI'.","MethodDefinition","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'token' is assigned a value but never used.","'Spinner' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation"]